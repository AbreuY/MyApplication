package com.lyrebirdstudio.pointlist;

import android.graphics.PointF;

import com.google.android.exoplayer2.trackselection.AdaptiveVideoTrackSelection;

import java.util.ArrayList;
import java.util.List;

public class Collage10 extends Collage {
    public static int shapeCount = 10;

    public Collage10(int width, int height) {
        this.collageLayoutList = new ArrayList();
        PointF[] points = new PointF[4];
        ArrayList arrayList = new ArrayList();
        List<PointF[]> shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 0.5f, ((float) height) * 0.0f), new PointF(((float) width) * 0.5f, ((float) height) * 0.25f), new PointF(((float) width) * 0.0f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * 0.5f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.25f), new PointF(((float) width) * 0.25f, ((float) height) * 0.25f), new PointF(((float) width) * 0.25f, ((float) height) * 0.5f), new PointF(((float) width) * 0.0f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.25f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * 0.25f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f), new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * 1.0f, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.5f), new PointF(((float) width) * 0.25f, ((float) height) * 0.5f), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * 1.0f, ((float) height) * 0.5f), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.5f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.5f, ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 0.5f, ((float) height) * 0.0f), new PointF(((float) width) * 0.5f, ((float) height) * 0.5f), new PointF(((float) width) * 0.0f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.5f), new PointF(((float) width) * 0.5f, ((float) height) * 0.5f), new PointF(((float) width) * 0.5f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, ((float) height) * 0.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f), new PointF(((float) width) * 0.5f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * 0.5f, ((float) height) * 0.5f), new PointF(((float) width) * 0.5f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.5f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 1.0f), new PointF(((float) width) * 0.5f, ((float) height) * 1.0f), new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * 1.0f, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * 1.0f, ((float) height) * 0.5f), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 1.0f)});
        CollageLayout collageLayout = new CollageLayout(shapeList);
        collageLayout.maskPairListSvg.add(new MaskPairSvg(0, 0));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(1, 0));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(2, 0));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(3, 0));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(4, 0));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(5, 0));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(6, 0));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(7, 0));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(8, 0));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(9, 0));
        collageLayout.useLine = false;
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 0.5f, ((float) height) * 0.0f), new PointF(((float) width) * 0.5f, ((float) height) * 0.25f), new PointF(((float) width) * 0.0f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * 0.5f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.25f), new PointF(((float) width) * 0.25f, ((float) height) * 0.25f), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.25f), new PointF(((float) width) * 0.5f, ((float) height) * 0.25f), new PointF(((float) width) * 0.5f, ((float) height) * 0.5f), new PointF(((float) width) * 0.25f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, ((float) height) * 0.5f), new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.25f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, ((float) height) * 0.25f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * 0.5f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f), new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.5f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.5f, ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 0.25f, ((float) height) * 0.0f), new PointF(((float) width) * 0.25f, ((float) height) * 0.25f), new PointF(((float) width) * 0.0f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * 0.25f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.25f), new PointF(((float) width) * 0.25f, ((float) height) * 0.25f), new PointF(((float) width) * 0.25f, ((float) height) * 0.5f), new PointF(((float) width) * 0.0f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.25f), new PointF(0.6666667f * ((float) width), ((float) height) * 0.25f), new PointF(0.6666667f * ((float) width), ((float) height) * 0.5f), new PointF(((float) width) * 0.25f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(0.6666667f * ((float) width), ((float) height) * 0.25f), new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * 1.0f, ((float) height) * 0.5f), new PointF(0.6666667f * ((float) width), ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.5f), new PointF(((float) width) * 0.25f, ((float) height) * 0.5f), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.5f), new PointF(0.6666667f * ((float) width), ((float) height) * 0.5f), new PointF(0.6666667f * ((float) width), ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(0.6666667f * ((float) width), ((float) height) * 0.5f), new PointF(((float) width) * 1.0f, ((float) height) * 0.5f), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(0.6666667f * ((float) width), ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(0.6666667f * ((float) width), ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(0.6666667f * ((float) width), ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.6666667f * ((float) width), ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(0.6666667f * ((float) width), ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 0.25f, ((float) height) * 0.0f), new PointF(((float) width) * 0.25f, ((float) height) * 0.25f), new PointF(((float) width) * 0.0f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * 0.25f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.25f), new PointF(((float) width) * 0.25f, ((float) height) * 0.25f), new PointF(((float) width) * 0.25f, ((float) height) * 0.5f), new PointF(((float) width) * 0.0f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.5f), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.0f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.25f), new PointF(((float) width) * 0.5f, ((float) height) * 0.25f), new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, ((float) height) * 0.25f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f), new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * 1.0f, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 1.0f, ((float) height) * 0.5f), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 0.25f, ((float) height) * 0.0f), new PointF(((float) width) * 0.25f, ((float) height) * 0.25f), new PointF(((float) width) * 0.0f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f), new PointF(((float) width) * 0.25f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.25f), new PointF(((float) width) * 0.25f, ((float) height) * 0.25f), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.25f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * 0.25f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f), new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.25f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 1.0f), new PointF(((float) width) * 0.25f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 0.25f, ((float) height) * 0.0f), new PointF(((float) width) * 0.25f, 0.33333334f * ((float) height)), new PointF(((float) width) * 0.0f, 0.33333334f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, 0.33333334f * ((float) height)), new PointF(((float) width) * 0.25f, 0.33333334f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, 0.33333334f * ((float) height)), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, 0.33333334f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, 0.33333334f * ((float) height)), new PointF(((float) width) * 0.25f, 0.33333334f * ((float) height)), new PointF(((float) width) * 0.25f, 0.6666667f * ((float) height)), new PointF(((float) width) * 0.0f, 0.6666667f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, 0.33333334f * ((float) height)), new PointF(((float) width) * 0.5f, 0.33333334f * ((float) height)), new PointF(((float) width) * 0.5f, 0.6666667f * ((float) height)), new PointF(((float) width) * 0.25f, 0.6666667f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, 0.33333334f * ((float) height)), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, 0.33333334f * ((float) height)), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, 0.6666667f * ((float) height)), new PointF(((float) width) * 0.5f, 0.6666667f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, 0.33333334f * ((float) height)), new PointF(((float) width) * 1.0f, 0.33333334f * ((float) height)), new PointF(((float) width) * 1.0f, 0.6666667f * ((float) height)), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, 0.6666667f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, 0.6666667f * ((float) height)), new PointF(((float) width) * 0.25f, 0.6666667f * ((float) height)), new PointF(((float) width) * 0.25f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, 0.6666667f * ((float) height)), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, 0.6666667f * ((float) height)), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 1.0f), new PointF(((float) width) * 0.25f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, 0.6666667f * ((float) height)), new PointF(((float) width) * 1.0f, 0.6666667f * ((float) height)), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 0.5f, ((float) height) * 0.0f), new PointF(((float) width) * 0.5f, ((float) height) * 0.5f), new PointF(((float) width) * 0.0f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.5f), new PointF(((float) width) * 0.5f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.5f), new PointF(((float) width) * 0.25f, ((float) height) * 0.5f), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * 0.5f), new PointF(((float) width) * 0.5f, ((float) height) * 0.5f), new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * 1.0f, ((float) height) * 0.5f), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.25f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.25f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.5f, ((float) height) * 1.0f), new PointF(((float) width) * 0.25f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 1.0f), new PointF(((float) width) * 0.5f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(0.6666667f * ((float) width), ((float) height) * 0.0f), new PointF(0.6666667f * ((float) width), 0.33333334f * ((float) height)), new PointF(((float) width) * 0.0f, 0.33333334f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, 0.33333334f * ((float) height)), new PointF(0.6666667f * ((float) width), 0.33333334f * ((float) height)), new PointF(0.6666667f * ((float) width), 0.6666667f * ((float) height)), new PointF(((float) width) * 0.0f, 0.6666667f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, 0.6666667f * ((float) height)), new PointF(0.33333334f * ((float) width), 0.6666667f * ((float) height)), new PointF(0.33333334f * ((float) width), 0.8333333f * ((float) height)), new PointF(((float) width) * 0.0f, 0.8333333f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, 0.8333333f * ((float) height)), new PointF(0.33333334f * ((float) width), 0.8333333f * ((float) height)), new PointF(0.33333334f * ((float) width), ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.33333334f * ((float) width), 0.6666667f * ((float) height)), new PointF(0.6666667f * ((float) width), 0.6666667f * ((float) height)), new PointF(0.6666667f * ((float) width), ((float) height) * 1.0f), new PointF(0.33333334f * ((float) width), ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.6666667f * ((float) width), ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, 0.33333334f * ((float) height)), new PointF(0.6666667f * ((float) width), 0.33333334f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(0.6666667f * ((float) width), 0.33333334f * ((float) height)), new PointF(0.8333333f * ((float) width), 0.33333334f * ((float) height)), new PointF(0.8333333f * ((float) width), 0.6666667f * ((float) height)), new PointF(0.6666667f * ((float) width), 0.6666667f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(0.8333333f * ((float) width), 0.33333334f * ((float) height)), new PointF(((float) width) * 1.0f, 0.33333334f * ((float) height)), new PointF(((float) width) * 1.0f, 0.6666667f * ((float) height)), new PointF(0.8333333f * ((float) width), 0.6666667f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(0.6666667f * ((float) width), 0.6666667f * ((float) height)), new PointF(((float) width) * 1.0f, 0.6666667f * ((float) height)), new PointF(((float) width) * 1.0f, 0.8333333f * ((float) height)), new PointF(0.6666667f * ((float) width), 0.8333333f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(0.6666667f * ((float) width), 0.8333333f * ((float) height)), new PointF(((float) width) * 1.0f, 0.8333333f * ((float) height)), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(0.6666667f * ((float) width), ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 0.5f, ((float) height) * 0.0f), new PointF(((float) width) * 0.5f, ((float) height) * 0.5f), new PointF(((float) width) * 0.0f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 0.5f), new PointF(((float) width) * 0.5f, ((float) height) * 0.5f), new PointF(((float) width) * 0.5f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.5f, ((float) height) * 0.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f), new PointF(((float) width) * 0.5f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * 0.5f, ((float) height) * 0.5f), new PointF(((float) width) * 0.5f, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 0.5f, ((float) height) * 0.5f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 1.0f), new PointF(((float) width) * 0.5f, ((float) height) * 1.0f), new PointF(((float) width) * 0.5f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 1.0f, ((float) height) * 0.25f), new PointF(((float) width) * 1.0f, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.25f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 0.5f), new PointF(((float) width) * 1.0f, ((float) height) * 0.5f), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION)});
        shapeList.add(new PointF[]{new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(((float) width) * AdaptiveVideoTrackSelection.DEFAULT_BANDWIDTH_FRACTION, ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
    }
}
